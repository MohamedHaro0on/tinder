{"version":3,"sources":["Components/useWindowWidth.jsx","Components/Header/Header.jsx","Images/profile photo.jpg","Components/SideBar/SideBar.jsx","Components/Loader/Loader.jsx","Context/Context.jsx","TinderCards/Card.jsx","TinderCards/TinderCards.jsx","PervCards/PervCards.jsx","Components/Footer/Footer.jsx","App.js","reportWebVitals.js","index.js","TinderCards/TinderCards.module.css","Components/Header/Header.module.css","Components/SideBar/SideBar.module.css","PervCards/PervCards.module.css","Components/Footer/Footer.module.css","App.module.css","Components/Loader/Loader.module.css"],"names":["useWindowWidth","useState","window","innerWidth","width","setWidth","useLayoutEffect","handleResize","addEventListener","removeEventListener","Routes","url","id","ariaLabel","icon","viewBox","height","focusable","aria-hidden","alt","role","d","fillRule","Header","AppBar","position","className","ClassNames","map","to","activeClassName","Active","aria-label","IconButton","SideBar","value","setValue","SideBarHeader","Avatar","src","ProfileImage","title","Main","Paper","Tabs","onChange","event","newValue","centered","Tab","label","TabPanel","index","props","children","other","hidden","aria-labelledby","Box","p","Typography","Loader","CircularProgress","Context","createContext","Provider","PeopleContext","loading","setLoading","people","setPeople","liked","setLiked","disLiked","setDisliked","providedPeople","setProvidedPeople","pointer","setPointer","useEffect","FetchPeople","axios","get","then","res","data","slice","prevState","console","log","catch","err","handleRemovingCard","length","filter","person","handleLikedCard","handleDisLikedCards","Card","useContext","swipeDirection","setSwapDir","CardRef","createRef","CardControls","fontSize","Cancel","dir","Star","Heart","preventSwipe","Swipe","onSwipe","string","onCardLeftScreen","CardLeftScreen","ref","TinderCard","style","backgroundImage","Info","Description","Controls","onClick","current","swipe","handleControls","SwipeCaption","Caption","Like","SuperLike","Nope","TinderCards","TinderContainer","element","key","renderCards","PrevCardContainer","PervCards","pathname","history","location","PrevCardsContainer","substring","Footer","setHide","Icons","Button","pervState","variant","Hide","Show","App","Width","basename","Container","MainContent","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.24ff659d.chunk.js","sourcesContent":["import { useLayoutEffect, useState } from 'react'\r\n\r\n// I use this component to get the updated window width and use it for layout purposes ;\r\n// i have implemented it  as a custom hook to seprate the logic and make it resuable for other components;\r\n\r\nconst useWindowWidth = () => {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    useLayoutEffect(() => {\r\n        let handleResize = () => setWidth(window.innerWidth);\r\n        // geting the window inner width every time the window resizes ;\r\n        window.addEventListener(\"resize\", handleResize);\r\n        // Cleaning Up;\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    })\r\n\r\n    return width;\r\n}\r\n\r\nexport default useWindowWidth","\r\n// material ui imports:\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// end;\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ClassNames from \"./Header.module.css\"\r\n\r\nlet Routes = [\r\n    {\r\n        url: \"/\", id: 1, ariaLabel: \"to home\", icon:\r\n            (<svg\r\n                viewBox=\"0 0 24 24\"\r\n                width=\"24px\"\r\n                height=\"24px\"\r\n                focusable=\"false\"\r\n                aria-hidden=\"true\"\r\n                alt=\"Tinder Logo\"\r\n                role=\"presentation\">\r\n                <path\r\n                    d={`M8.21 10.08c-.02 0-.04 0-.06-.02-.67-.9-.84-2.44-.89-3.03 0-.11-.13-.18-.23-.12C4.93 8.08 3 10.86 3 13.54 3 18.14 6.2 22 11.7 22c5.15 0 \r\n                        8.7-3.98 8.7-8.46 0-5.87-4.2-9.77-7.93-11.53a.13.13 0 0 0-.19.14c.48 3.16-.18 6.6-4.07 7.93z`}\r\n                    fillRule=\"nonzero\">\r\n                </path>\r\n            </svg>)\r\n    },\r\n    { url: \"/liked\", id: 2, icon: <StarIcon />, ariaLabel: \"to Liked page\" },\r\n    { url: \"/disliked\", id: 3, icon: <ThumbDownIcon />, ariaLabel: \"to disLiked Page\" },\r\n    { url: \"/profile\", id: 4, icon: <PersonIcon />, ariaLabel: \"to Profile Page\" }\r\n]\r\nconst Header = () => {\r\n    return (\r\n        <AppBar position=\"fixed\" className={ClassNames.Header}>\r\n            <nav>\r\n                <ul className={ClassNames.Routes}>\r\n                    {Routes.map(({ url, icon, id, ariaLabel }) => {\r\n                        return (\r\n                            <li key={id}>\r\n                                <NavLink to={`${url}`} activeClassName={ClassNames.Active} aria-label={`to ${url}`}>\r\n                                    <IconButton aria-label={ariaLabel}>{icon}</IconButton>\r\n                                </NavLink>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/profile photo.05d21fd0.jpg\";","import { useState } from \"react\";\r\n\r\n// meterial ui imports;\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n// end\r\n\r\nimport ClassNames from \"./SideBar.module.css\";\r\nimport ProfileImage from \"../../Images/profile photo.jpg\";\r\n\r\n\r\n\r\n// this is the side bar exactly like the one in tinder app ;\r\n// it display's the user's profile image and Linkds him to his profile panel;\r\n// its only rendered in larg screen sizes ;\r\n\r\nconst SideBar = () => {\r\n\r\n    const [value, setValue] = useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <aside className={ClassNames.SideBar}>\r\n\r\n            {\r\n                // the side bar header\r\n                <header className={ClassNames.SideBarHeader}>\r\n                    <div>\r\n                        <Avatar src={ProfileImage} alt=\"Mohamed Ahmed Ali\" title=\"Mohamed Ahmed Ali\" />\r\n                        <h2> My Profile </h2>\r\n                    </div>\r\n                    <IconButton aria-label=\"Work Mode\"> <BusinessCenterIcon /></IconButton>\r\n                </header>\r\n            }\r\n\r\n            {\r\n                // the side bar tabs ;\r\n                // inside the tabPanel component there Should be the Matches or Message Component ;\r\n                <main className={ClassNames.Main}>\r\n                    <Paper>\r\n\r\n                        <Tabs onChange={handleChange} centered value={value}>\r\n                            <Tab label=\"Matches\" />\r\n                            <Tab label=\"Messages\" />\r\n                        </Tabs>\r\n\r\n                        <TabPanel value={value} index={0} aria-label=\"Matches\">\r\n                            Matches\r\n                        </TabPanel>\r\n\r\n                        <TabPanel value={value} index={1} aria-label=\"Messages\">\r\n                            Messages\r\n                        </TabPanel>\r\n                    </Paper>\r\n                </main>\r\n            }\r\n\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n};","import CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ClassNames from \"./Loader.module.css\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <CircularProgress className={ClassNames.Loader} />\r\n    );\r\n}\r\nexport default Loader;","// this is like the data store for the project it handles the disliked , liked and all cards for evrey component accross the project;\r\n\r\nimport { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst URL = \"https://jsonplaceholder.typicode.com/photos\";\r\n\r\n\r\nconst Context = createContext(null);\r\nconst { Provider } = Context;\r\n\r\n\r\nconst PeopleContext = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [people, setPeople] = useState([]);\r\n\r\n    const [liked, setLiked] = useState([]);\r\n    const [disLiked, setDisliked] = useState([]);\r\n\r\n    // the amount of cards rendered to the page;\r\n    const [providedPeople, setProvidedPeople] = useState([]);\r\n    const [pointer, setPointer] = useState(20);\r\n    // the use effect runs only once when the component renders to the screen ;\r\n    useEffect(() => {\r\n        FetchPeople();\r\n    },[])\r\n\r\n    // Fetching the Data from the provided URL ;\r\n    const FetchPeople = () => {\r\n        setLoading(true)\r\n        axios.get(URL).then((res) => {\r\n            setPeople(res.data);\r\n            setProvidedPeople(res.data.slice(0, 20))\r\n            setPointer(prevState=> prevState+20);\r\n            console.log(\"The Provided People\" , providedPeople)\r\n        }).catch((err) => {\r\n            console.log(\"the Error \", err);\r\n        }).then(() => {\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    // evrey time the user swips a card this function is called \r\n    // it filters the swiped elmenet and deletes it from the state ;\r\n    // also it pushes anathor element at the end ;\r\n    const handleRemovingCard = (id) => {\r\n        setProvidedPeople(prevState => {\r\n            if (prevState.length!==1){\r\n                return [...prevState.filter(person => person.id !== id)]\r\n            }\r\n            else {\r\n                setProvidedPeople(prevState=>{\r\n                    return [...people.slice(pointer-20,pointer)]\r\n                })\r\n                setPointer(prevState=>{\r\n                    console.log(\"the prevState\", prevState);\r\n                    return prevState + 20 ;\r\n                })\r\n  \r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // handles the Liked Card List;\r\n    const handleLikedCard = (person) => {\r\n        setLiked(prevState => [...prevState, { ...person }]);\r\n        handleRemovingCard(person.id);\r\n    }\r\n\r\n    // Handles the DisLiked Cards List;\r\n    const handleDisLikedCards = (person) => {\r\n        setDisliked(prevState => [...prevState, { ...person }]);\r\n        handleRemovingCard(person.id);\r\n    }\r\n\r\n\r\n    // this passed to the TinderCards Component;\r\n    // due to the huge amount of data it makes sure that there are 10 card rendered at any time;\r\n\r\n    return (\r\n        <Provider\r\n            value={{ loading, providedPeople, handleRemovingCard, liked, handleLikedCard, disLiked, handleDisLikedCards }} {...props}>\r\n            {props.children}\r\n        </Provider>\r\n    )\r\n}\r\n\r\n\r\nexport { PeopleContext, Context };","import TinderCard from 'react-tinder-card'\r\nimport { createRef, useContext, useState } from \"react\";\r\nimport { Context } from \"../Context/Context\";\r\n\r\n// the material ui imports;\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport ClassNames from \"./TinderCards.module.css\";\r\n\r\nconst Card = ({ url, title, id }) => {\r\n\r\n    const { handleLikedCard, handleDisLikedCards } = useContext(Context);\r\n    const [swipeDirection, setSwapDir] = useState(null);\r\n    const CardRef = createRef(null);\r\n\r\n    const CardLeftScreen = (person, dir) => {\r\n        dir === \"left\" ? handleDisLikedCards(person) : handleLikedCard(person)\r\n    }\r\n\r\n    const onSwipe = (string) => {\r\n        setSwapDir(string);\r\n    }\r\n\r\n    const handleControls = (dir) => {\r\n        CardRef.current.swipe(dir);\r\n    }\r\n\r\n    const CardControls = [\r\n        { icon: <ClearIcon fontSize=\"large\" />, ariaLabel: \"Cancel\", className: ClassNames.Cancel, dir: \"left\" },\r\n        { icon: <StarIcon fontSize=\"large\" />, ariaLabel: \"SuperLike\", className: ClassNames.Star, dir: \"up\" },\r\n        { icon: <FavoriteIcon fontSize=\"large\" />, ariaLabel: \"Like\", className: ClassNames.Heart, dir: \"right\" },\r\n    ]\r\n    return (    \r\n        <TinderCard\r\n            preventSwipe={[\"down\"]}\r\n            className={ClassNames.Swipe}\r\n            onSwipe={(string) => onSwipe(string)}\r\n            onCardLeftScreen={(dir) => CardLeftScreen({ title, id, url }, dir)}\r\n            ref={CardRef}\r\n        >\r\n            <article\r\n                className={ClassNames.TinderCard}\r\n                style={{ backgroundImage: `url(${url})` }}\r\n                aria-label={title}\r\n            >\r\n\r\n                <SwipeCaption dir={swipeDirection} />\r\n\r\n                <div className={ClassNames.Info}>\r\n                    <p className={ClassNames.Description}>{title}</p>\r\n                    <div className={ClassNames.Controls}>\r\n                        {CardControls.map(({ icon, ariaLabel, className, dir }, index) => {\r\n                            return (\r\n                                <IconButton onClick={() => handleControls(dir)} aria-label={ariaLabel} key={index} className={className}>\r\n                                    {icon}\r\n                                </IconButton>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </TinderCard>\r\n    )\r\n}\r\nexport default Card;\r\n\r\n\r\nconst SwipeCaption = ({ dir }) => {\r\n    let Caption = null;\r\n    switch (dir) {\r\n        case (\"right\"): {\r\n            Caption = (<p className={ClassNames.Like}>  Like  </p>);\r\n            break;\r\n        }\r\n        case (\"up\"): {\r\n            Caption = (<p className={ClassNames.SuperLike}>  super Like </p>);\r\n            break;\r\n        }\r\n        case (\"left\"): {\r\n            Caption = (<p className={ClassNames.Nope}> Nope </p>);\r\n            break;\r\n        }\r\n        default: {\r\n            Caption = null;\r\n        }\r\n    }\r\n    return (\r\n        <>{Caption}</>\r\n    )\r\n}","import { useContext } from \"react\";\r\nimport Loader from \"../Components/Loader/Loader\";\r\nimport ClassNames from \"./TinderCards.module.css\";\r\nimport { Context } from \"../Context/Context\";\r\nimport Card from \"./Card\";\r\n\r\nconst TinderCards = () => {\r\n    const { loading, providedPeople } = useContext(Context);\r\n    console.log(\"The Provided People\" , providedPeople , loading);\r\n    if (loading && !providedPeople) {\r\n        return (\r\n            <Loader />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className={ClassNames.TinderContainer}>\r\n                {providedPeople.map((element) => {\r\n                    return (\r\n                        <Card {...element} key={element.id} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default TinderCards;","import { Link } from \"react-router-dom\";\r\nimport ClassNames from './PervCards.module.css';\r\nimport { useContext } from \"react\";\r\nimport { Context } from \"../Context/Context\";\r\n\r\n\r\nconst renderCards = (data) => {\r\n    return (\r\n        <article className={ClassNames.PrevCardContainer}>\r\n            {data.map(({ url, id, title }) => {\r\n                return (\r\n                    <Link key={id} to=\"\">\r\n                        <img src={url} width=\"100\" alt={title} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </article>\r\n    )\r\n}\r\nconst PervCards = (props) => {\r\n\r\n    let { pathname } = props.history.location\r\n    const { liked, disLiked } = useContext(Context);\r\n\r\n    // if the route is equal to liked then it will display the liked list;\r\n    if (liked.length > 0 && pathname === \"/liked\") {\r\n        return (\r\n            <div className={ClassNames.PrevCardsContainer}>\r\n                <h2> Likes </h2>\r\n                {renderCards(liked)}\r\n            </div>\r\n        )\r\n    }\r\n    // if the route is equale to disliked it will display the disliked list;\r\n    else if (disLiked.length > 0 && pathname === \"/disliked\") {\r\n        return (\r\n            <div className={ClassNames.PrevCardsContainer}>\r\n                <h2> DisLikes </h2>\r\n                {renderCards(disLiked)}\r\n            </div>\r\n        )\r\n\r\n    }\r\n    // if the liked and disliked are empty ;\r\n    else if (liked.length === 0 || disLiked.length === 0) {\r\n        return (\r\n            <article>\r\n                <h3> you havenot {pathname.substring(1)} any one  yet\r\n                    <Link to=\"/\" aria-label=\"to Home page\"> Let's Start !! </Link>\r\n                </h3>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PervCards;","import { useState } from \"react\";\r\nimport ClassNames from \"./Footer.module.css\";\r\n\r\n// meterial ui imports:\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst Footer = () => {\r\n    const [hidden, setHide] = useState(true);\r\n    const Icons = [\r\n        { icon: <KeyboardBackspaceIcon />, title: \"Nope \", id: 1 },\r\n        { icon: <ArrowRightAltIcon />, title: \"like \", id: 2 },\r\n        { icon: <ArrowUpwardIcon />, title: \"SuperLike \", id: 3 },\r\n    ]\r\n    const handleFooterToggler = () => {\r\n        setHide(pervState => !pervState);\r\n    }\r\n    return (\r\n        <footer className={ClassNames.Footer}>\r\n            <Button onClick={() => handleFooterToggler()} variant=\"contained\">\r\n                {hidden ? \"Show\" : \"Hide\"}\r\n            </Button>\r\n\r\n            <ul className={hidden ? ClassNames.Hide : ClassNames.Show}>\r\n                {Icons.map(({ icon, title, id }) => {\r\n                    return (\r\n                        <li key={id}>\r\n                            <span>{icon}</span>\r\n                            <span>{title}</span>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import ClassNames from './App.module.css';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport useWindowWidth from \"./Components/useWindowWidth\";\r\n\r\nimport Header from \"./Components/Header/Header.jsx\";\r\nimport SideBar from \"./Components/SideBar/SideBar.jsx\";\r\nimport TinderCards from \"./TinderCards/TinderCards.jsx\";\r\nimport { PeopleContext } from './Context/Context';\r\nimport PervCards from './PervCards/PervCards';\r\nimport Footer from './Components/Footer/Footer';\r\n\r\nlet MainBreakPoint = 768;\r\n\r\nconst App = () => {\r\n  const Width = useWindowWidth();\r\n  return (\r\n    <Router basename = \"/tinder\">\r\n      <Switch>\r\n        <PeopleContext>\r\n          <div className={ClassNames.Container}>\r\n\r\n            {Width < MainBreakPoint ? <Header /> : <SideBar />}\r\n\r\n            <main className={ClassNames.MainContent}>\r\n\r\n              <Route exact path=\"/\" component={TinderCards} />\r\n              <Route exact path=\"/tinder/liked\" component={PervCards} />\r\n              <Route exact path=\"/tinder/disliked\" component={PervCards} />\r\n\r\n              {Width > MainBreakPoint && <Footer />}\r\n            </main>\r\n          </div>\r\n        </PeopleContext>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TinderContainer\":\"TinderCards_TinderContainer__3kgLS\",\"TinderCard\":\"TinderCards_TinderCard__2O5Y2\",\"Info\":\"TinderCards_Info__2w70x\",\"Controls\":\"TinderCards_Controls__KYfQe\",\"Repeat\":\"TinderCards_Repeat__Kfm2F\",\"Cancel\":\"TinderCards_Cancel__3Cwnt\",\"Star\":\"TinderCards_Star__2ztRA\",\"Heart\":\"TinderCards_Heart__140Mv\",\"Like\":\"TinderCards_Like__1DKQL\",\"Nope\":\"TinderCards_Nope__1GU9m\",\"SuperLike\":\"TinderCards_SuperLike__hYpM6\",\"Swipe\":\"TinderCards_Swipe__1ntuu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__TS-Mz\",\"Routes\":\"Header_Routes__33Pm7\",\"Active\":\"Header_Active__3wFZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__1c3op\",\"Main\":\"SideBar_Main__1tokm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PrevCardsContainer\":\"PervCards_PrevCardsContainer__3Xw1u\",\"PrevCardContainer\":\"PervCards_PrevCardContainer__29FbX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__2fPzY\",\"Hide\":\"Footer_Hide__is6uG\",\"Show\":\"Footer_Show__1FmMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__2zbSn\",\"MainContent\":\"App_MainContent__emXSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__tk4Ms\"};"],"sourceRoot":""}